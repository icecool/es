<?php
namespace APP\MVC\V;

class MAP_V {

    public function main($model){
    	$result='';
    	$muassisaho=$model->get_muassisaho();
    	$mks='';
    	$fg=false;
    	foreach ($muassisaho as $key => $v) {
    		if($v['geo_lat']!=''){
    			if($fg) $mks.=",\n";
    			$mks.='[ '.$v['geo_lng'].','.$v['geo_lat'].', "'.$v['name_ru'].'", "'.$v['director'].'", "'.$v['address'].'", "'.$v['phone'].'", "'.$v['namud'].'"]';
    			if(!$fg){$fg=true;}
    		}    		
    	}
    	$mlist='';
    	if(count($muassisaho)>0){
    		$mlist.='<select id="xlist">'."\n";
    			foreach($muassisaho as $k=>$vl){
    				$gc='';
    				if($vl['geo_lat']!='') $gc=' *';
    				$mlist.='<option value="'.$k.'">'.$vl['name_ru'].' ('.$vl['geo-name'].') '.$gc.'</option>'."\n"; 
    			}
    		$mlist.="</select>\n";    		
    	}
    	\CORE\BC\UI::init()->pos['link'].='<link rel="stylesheet" href="'.UIPATH.'/ext/map/leaflet.css" />';
    	\CORE\BC\UI::init()->pos['js'].='
    	<script src="'.UIPATH.'/ext/map/leaflet.js"></script>
    	<script src="'.UIPATH.'/ext/map/singleclick.js"></script>
		<script language="javascript">

			function SaveCoords(xlat, xlng){
				var xid = $("#xlist").val();
				$.post("./?c=map&act=ajax&do=marker",{ id: xid, lat: xlat, lng: xlng }, function(data){
					if(data=="ok") {
						//alert("Точка добавлена!");
					} else {
						alert(data);
					}
				});
			}

	        function init() {

	            var map = new L.Map(\'map\');

	            L.tileLayer(\'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\', {
	                attribution: \'&copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors\',
	                maxZoom: 17
	            }).addTo(map);

	            map.attributionControl.setPrefix(\'\'); // Dont show the Powered by Leaflet text.

	            var dushanbe = new L.LatLng(38.5495108,68.7781477);
	            map.setView(dushanbe, 12);

	            // Define an array. This could be done in a seperate js file.
	            // This tidy formatted section could even be generated by a server-side script
	            // or fetched seperately as a jsonp request.

	            var markers = [
	                '.$mks.'
	            ];
                //console.log("log: "+markers);

                var greenIcon = L.icon({
                    iconUrl: "ui/ext/map/images/green.png",
                    shadowUrl: "ui/ext/map/images/marker-shadow.png",
                    iconSize:     [41, 41], // size of the icon
                    shadowSize:   [41, 41], // size of the shadow
                    iconAnchor:   [22, 40], // point of the icon which will correspond to marker\'s location
                    shadowAnchor: [10, 40],  // the same for the shadow
                    popupAnchor:  [-2, -35] // point from which the popup should open relative to the iconAnchor
                });
                var blueIcon = L.icon({
                    iconUrl: "ui/ext/map/images/azure.png",
                    shadowUrl: "ui/ext/map/images/marker-shadow.png",
                    iconSize:     [41, 41], // size of the icon
                    shadowSize:   [41, 41], // size of the shadow
                    iconAnchor:   [22, 40], // point of the icon which will correspond to marker\'s location
                    shadowAnchor: [10, 40],  // the same for the shadow
                    popupAnchor:  [-2, -35] // point from which the popup should open relative to the iconAnchor
                });
                var pinkIcon = L.icon({
                    iconUrl: "ui/ext/map/images/pink.png",
                    shadowUrl: "ui/ext/map/images/marker-shadow.png",
                    iconSize:     [41, 41], // size of the icon
                    shadowSize:   [41, 41], // size of the shadow
                    iconAnchor:   [22, 40], // point of the icon which will correspond to marker\'s location
                    shadowAnchor: [10, 40],  // the same for the shadow
                    popupAnchor:  [-2, -35] // point from which the popup should open relative to the iconAnchor
                });
                var yellowIcon = L.icon({
                    iconUrl: "ui/ext/map/images/yellow.png",
                    shadowUrl: "ui/ext/map/images/marker-shadow.png",
                    iconSize:     [41, 41], // size of the icon
                    shadowSize:   [41, 41], // size of the shadow
                    iconAnchor:   [22, 40], // point of the icon which will correspond to marker\'s location
                    shadowAnchor: [10, 40],  // the same for the shadow
                    popupAnchor:  [-2, -35] // point from which the popup should open relative to the iconAnchor
                });
	            //Loop through the markers array
	            for (var i=0; i<markers.length; i++) {
	            //for (var i=0; i<2; i++) {

	                var lon = markers[i][0];
	                var lat = markers[i][1];
	                var popupText = \'<p><img style="padding-right: 5px; margin-top: -5px;" src="'.UIPATH.'/img/no-image.64.png" align="left"/> \\
	                <strong>\'+markers[i][2]+\'</strong> \\
	                <br/><strong>Директор: </strong>\'+markers[i][3]+\' \\
	                <br/><strong>Адрес: </strong>\'+markers[i][4]+\' \\
	                <br/><strong>Телефон: </strong>\'+markers[i][5]+\' \\
	                <br/><strong class="pull-right"><a href="\'+markers[i][5]+\'">Подробнее</a></p> \';

	                var markerLocation = new L.LatLng(lat, lon);

	                if (markers[i][6]==1)
	                    var marker = new L.Marker(markerLocation, {icon: greenIcon});
                    else if (markers[i][6]==2)
                        var marker = new L.Marker(markerLocation, {icon: blueIcon});
                    else if (markers[i][6]==3)
                        var marker = new L.Marker(markerLocation, {icon: pinkIcon});
                    else
                        var marker = new L.Marker(markerLocation, {icon: yellowIcon});

	                map.addLayer(marker);

	                marker.bindPopup(popupText,{
	                    minWidth: 230
	                });

	            }

	            // addMarkerByClick

	            var zmarker = null;

	            map.on("singleclick",function ( e ) {
		                if ($("#xflag").is(":checked")) {
		                		if(zmarker!=null) map.removeLayer(zmarker);
		                    var markerLocation = new L.LatLng(e.latlng.lat, e.latlng.lng);
		                    var xmarker = new L.Marker(markerLocation);
		                    	zmarker = xmarker;
		                    map.addLayer(xmarker);
		                    //console.log( "singleclick", e );
		                    //L.popup().setLatLng( e.latlng )
		                    //    .setContent( "<p><code>singleclick</code> at " + e.latlng )
		                    //    .openOn( map );
		                    //alert(e.latlng.lat + \' : \' + e.latlng.lng);
		                    SaveCoords(e.latlng.lat, e.latlng.lng);
		                }
		            } );
		        
	        }

	        $(document).ready(function() {

	        	init();

			});
	    </script>
    	';
    	$result.='<div id="map" style="height: 540px"></div>
    	<div id="mysidebar">
    		<div id="xsidebar" class="xmg">'.$mlist.' <input type="checkbox" id="xflag"> 
    		<label for="xflag">edit</label>
    		</div>
    	</div>
    	';
		return $result;
    }


}